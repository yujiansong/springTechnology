<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- spring的依赖注入
        依赖注入：Dependency Injection
        IOC的作用： 降低程序间的耦合 （依赖关系）
        依赖关系的管理： 都交给spring来维护
        当前类中用到其它类的对象，由spring为我们提供，我们只需要在配置文件中说明
        依赖关系的维护：
            就称之为依赖注入
            依赖注入：
                能注入的数据：
                    基本类型和String
                    其它bean类型（在配置文件中或者注解配置过得bean)
                    复杂类型/集合类型
                注入的方式有三种：
                    1.构造函数提供
                    2.set方法提供
                    3.使用注解提供
    -->

    <!-- 构造函数的注入
        使用的标签类型 constructor-arg
            type: 用于指定注入的数据的数据类型，该数据类型是构造函数中某个或某些参数的类型
            index: 用于指定注入的数据给构造函数中指定索引的位置的参数赋值，索引的位置从0开始
            name: 用于指定构造函数中指定名称的参数赋值 （常用）
            ===以上三个用于指定给构造函数中哪个参数赋值===
            ref: 用于指定其他类型的bean对象，在spring的IOC核心容器中出现过的bean对象
            value: 用于指定基本类型和String类型

            优势：
                在获取bean对象时，注入数据是必须的操作，否则无法创建成功
            弊端：
                改变了bean对象的实例化方式，使我们在创建对象时，即使不使用这些数据，也必须提供。
    -->
    <bean id="accountService" class="com.jiansong.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="王老二"></constructor-arg>
        <constructor-arg name="age" value="28"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>

    <!--配置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>

    <!-- set方法注入(常用)
        涉及的标签：property
        出现的位置： bean方法内部
        标签的属性：
            name: 用于指定时所注入的set方法名称
            ref: 用于指定其他类型的bean对象，在spring的IOC核心容器中出现过的bean对象
            value: 用于指定基本类型和String类型
    -->
    <bean id="accountService2" class="com.jiansong.service.impl.AccountServiceImpl2">
        <property name="name" value="yujiansong"></property>
        <property name="age" value="20"></property>
        <property name="birthday" ref="now"></property>
    </bean>

    <!-- 复杂类型的注入/集合类型的注入-->
    <bean id="accountService3" class="com.jiansong.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <set>
                <value>wanglaoer</value>
                <value>yujiansong</value>
                <value>laozheng</value>
            </set>
        </property>

        <property name="myList">
            <array>
                <value>wangtianshi</value>
                <value>bestJiansong</value>
                <value>ouyanglin</value>
            </array>
        </property>

        <property name="mySet">
            <list>
                <value>abc</value>
                <value>def</value>
                <value>ghi</value>
            </list>
        </property>

        <property name="myMap">
            <props>
                <prop key="TestC">ccc</prop>
                <prop key="TestD">ddd</prop>
            </props>
        </property>

        <property name="myProperties">
            <map>
                <entry key="testA" value="aaa"></entry>
                <entry key="testB">
                    <value>bbb</value>
                </entry>
            </map>
        </property>
    </bean>
</beans>